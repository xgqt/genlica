#!/bin/sh


# This file is part of genlica.

# genlica is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# genlica is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with genlica.  If not, see <https://www.gnu.org/licenses/>.

# Copyright (c) 2019-2021, XGQT
# Licensed under the GNU GPL v3 License

# Install Genlica


trap 'exit 128' INT
export PATH


main() {
    cd "$(dirname "${0}")" || exit 1

    # Auto-select the stow implementation
    if command -v stow >/dev/null 2>&1
    then
        stow_impl=stow
    elif command -v xstow >/dev/null 2>&1
    then
        stow_impl=xstow
    elif command -v pystow >/dev/null 2>&1
    then
        stow_impl=pystow
    else
        echo "There is no stow on the sytem! Exiting"
        exit 1
    fi

    # Back up the old portage directory
    if [ -d "${EPREFIX}/etc/portage" ] && [ ! -d "${EPREFIX}/etc/portage.bak" ]
    then
        mv "${EPREFIX}/etc/portage" "${EPREFIX}/etc/portage.bak" || exit 1
    fi

    # Reconstruct portage directory
    mkdir "${EPREFIX}/etc/portage"
    mkdir "${EPREFIX}/etc/portage/env"
    mkdir "${EPREFIX}/etc/portage/make.conf"
    mkdir "${EPREFIX}/etc/portage/package.accept_keywords"
    mkdir "${EPREFIX}/etc/portage/package.env"
    mkdir "${EPREFIX}/etc/portage/package.mask"
    mkdir "${EPREFIX}/etc/portage/package.use"
    mkdir "${EPREFIX}/etc/portage/repo.postsync.d"
    mkdir "${EPREFIX}/etc/portage/repos.conf"
    mkdir "${EPREFIX}/etc/portage/savedconfig"
    mkdir "${EPREFIX}/etc/portage/sets"

    # Install genlica
    ${stow_impl} -v portage -t "${EPREFIX}/etc/portage" || exit 1

    # Select the profile
    if [ -z "${EPREFIX}" ]
    then
        eselect profile set default/linux/amd64/17.1
    fi

    # Create basic addition to 99-main
    if [ ! -e "${EPREFIX}/etc/portage/make.conf/00-x86" ]
    then
        cat > "${EPREFIX}/etc/portage/make.conf/00-x86" <<EOF
CPU_FLAGS_X86="$(cpuid2cpuflags | awk -F : '{print $2}')"
EOF
    fi
    if [ ! -e "${EPREFIX}/etc/portage/make.conf/01-makeopts" ]
    then
        cat > "${EPREFIX}/etc/portage/make.conf/01-makeopts" <<EOF
MAKEOPTS="--jobs=$(nproc) --load-average=$(nproc)"
EOF
    fi
    if [ ! -e "${EPREFIX}/etc/portage/make.conf/02-flags" ]
    then
        cat > "${EPREFIX}/etc/portage/make.conf/02-flags" <<EOF
COMMON_FLAGS="-march=native -O2 -pipe"
EOF
    fi
    if [ ! -e "${EPREFIX}/etc/portage/make.conf/03-emerge" ]
    then
        cat > "${EPREFIX}/etc/portage/make.conf/03-emerge" <<EOF
EMERGE_DEFAULT_OPTS="\${EMERGE_DEFAULT_OPTS} --jobs=$(nproc)"
EOF
    fi

    # Setup the gentoo repository
    # Edit this afterwards if you are on Eprefix or Funtoo
    if [ ! -e "${EPREFIX}/etc/portage/repos.conf/gentoo.conf" ]
    then
        cat > "${EPREFIX}/etc/portage/repos.conf/gentoo.conf" <<EOF
[DEFAULT]
main-repo = gentoo

[gentoo]
location = /var/db/repos/gentoo
sync-type = git
sync-uri = https://github.com/gentoo-mirror/gentoo.git
auto-sync = yes
EOF
    fi

    # Add notmp
    if [ -x ./create_notmp ] && [ -z "${EPREFIX}" ]
    then
        sh create_notmp
    fi
}


if [ "$(whoami)" != root ] && [ -z "${EPREFIX}" ]
then
    sudo "${0}"
else
    main
fi
